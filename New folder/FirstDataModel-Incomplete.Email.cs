//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 7/22/2018 1:06:03 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using NHibernate.Classic;

namespace SammakEnterprise.JobSearch.Middle.Entities
{

    /// <summary>
    /// There are no comments for SammakEnterprise.JobSearch.Middle.Entities.Email, SammakEnterprise.JobSearch.Middle in the schema.
    /// </summary>
    public partial class Email : DomainBase, IValidatable {
    
        #region Extensibility Method Definitions
        
        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();

        public override bool Equals(object obj)
        {
          if (!base.Equals(obj))
          {
            return false;
          }

          Email toCompare = obj as Email;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.EmailAddress, toCompare.EmailAddress))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          return hashCode;
        }
        
        #endregion
        /// <summary>
        /// There are no comments for Email constructor in the schema.
        /// </summary>
        public Email()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for EmailAddress in the schema.
        /// </summary>
        public virtual string EmailAddress
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for Person in the schema.
        /// </summary>
        public virtual Person Person
        {
            get;
            set;
        }
    }

}
